use crate::cpu::Instruction;
use crate::cpu::addressing_modes::AddressingMode;
use crate::cpu::instructions::{InstructionType,InstructionInfo};


// 操作码到指令的映射
pub fn decode_opcode(opcode: u8) -> InstructionInfo {
    use AddressingMode::*;
    use Instruction::*;
    use InstructionType::*;
    match opcode {
        0x00 => InstructionInfo {
            operand_code: opcode,
            instruction: BRK,
            addressing_mode: Implied,
            operand_size:1,
            instruction_cycle: 7,
            unofficial: false,
            instruction_type: Common,
        },
        //JMP
        0x4C => InstructionInfo {
            operand_code: opcode,
            instruction: JMP,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 3,
            unofficial: false,
            instruction_type: Common,
        },

        0x6C => InstructionInfo {
            operand_code: opcode,
            instruction: JMP,
            addressing_mode: Indirect,
            operand_size:3,
            instruction_cycle: 5,
            unofficial: false,
            instruction_type: Common,
        },

        // LDX
        0xA2 => InstructionInfo {
            operand_code: opcode,
            instruction: LDX,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },
        0xAE => InstructionInfo {
            operand_code: opcode,
            instruction: LDX,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0xA6 => InstructionInfo {
            operand_code: opcode,
            instruction: LDX,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: false,
            instruction_type: Common,
        },
        0xB6 => InstructionInfo {
            operand_code: opcode,
            instruction: LDX,
            addressing_mode: ZeroPageY,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0xBE => InstructionInfo {
            operand_code: opcode,
            instruction: LDX,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: CrossingPage,
        },

        // STX
        0x86 => InstructionInfo {
            operand_code: opcode,
            instruction: STX,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: false,
            instruction_type: Common,
        },
        0x8E => InstructionInfo {
            operand_code: opcode,
            instruction: STX,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0x96 => InstructionInfo {
            operand_code: opcode,
            instruction: STX,
            addressing_mode: ZeroPageY,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },

        // JSR
        0x20 => InstructionInfo {
            operand_code: opcode,
            instruction: JSR,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },

        //NOP
        0x1A => InstructionInfo {
            operand_code: opcode,
            instruction: NOP,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },
        0x3A => InstructionInfo {
            operand_code: opcode,
            instruction: NOP,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },
        0x5A => InstructionInfo {
            operand_code: opcode,
            instruction: NOP,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },
        0x7A => InstructionInfo {
            operand_code: opcode,
            instruction: NOP,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },
        0xDA => InstructionInfo {
            operand_code: opcode,
            instruction: NOP,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },
        0xEA => InstructionInfo {
            operand_code: opcode,
            instruction: NOP,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },
        0xFA => InstructionInfo {
            operand_code: opcode,
            instruction: NOP,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },

        // SEC
        0x38 => InstructionInfo {
            operand_code: opcode,
            instruction: SEC,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },

        // BCS
        0xB0 => InstructionInfo {
            operand_code: opcode,
            instruction: BCS,
            addressing_mode: Relative,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Branch,
        },

        // CLC
        0x18 => InstructionInfo {
            operand_code: opcode,
            instruction: CLC,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },

        // BCC
        0x90 => InstructionInfo {
            operand_code: opcode,
            instruction: BCC,
            addressing_mode: Relative,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Branch,
        },

        // LDA
        0xA9 => InstructionInfo {
            operand_code: opcode,
            instruction: LDA,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },
        0xA5 => InstructionInfo {
            operand_code: opcode,
            instruction: LDA,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: false,
            instruction_type: Common,
        },
        0xB5 => InstructionInfo {
            operand_code: opcode,
            instruction: LDA,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0xAD => InstructionInfo {
            operand_code: opcode,
            instruction: LDA,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0xBD => InstructionInfo {
            operand_code: opcode,
            instruction: LDA,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: CrossingPage,
        },
        0xB9 => InstructionInfo {
            operand_code: opcode,
            instruction: LDA,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: CrossingPage,
        },
        0xA1 => InstructionInfo {
            operand_code: opcode,
            instruction: LDA,
            addressing_mode: IndirectX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },
        0xB1 => InstructionInfo {
            operand_code: opcode,
            instruction: LDA,
            addressing_mode: IndirectY,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: false,
            instruction_type: CrossingPage,
        },

        // BEQ
        0xF0 => InstructionInfo {
            operand_code: opcode,
            instruction: BEQ,
            addressing_mode: Relative,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Branch,
        },

        // BNE
        0xD0 => InstructionInfo {
            operand_code: opcode,
            instruction: BNE,
            addressing_mode: Relative,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Branch,
        },

        // STA
        0x85 => InstructionInfo {
            operand_code: opcode,
            instruction: STA,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: false,
            instruction_type: Common,
        },
        0x95 => InstructionInfo {
            operand_code: opcode,
            instruction: STA,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0x8D => InstructionInfo {
            operand_code: opcode,
            instruction: STA,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0x9D => InstructionInfo {
            operand_code: opcode,
            instruction: STA,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 5,
            unofficial: false,
            instruction_type: Common,
        },
        0x99 => InstructionInfo {
            operand_code: opcode,
            instruction: STA,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 5,
            unofficial: false,
            instruction_type: Common,
        },
        0x81 => InstructionInfo {
            operand_code: opcode,
            instruction: STA,
            addressing_mode: IndirectX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },
        0x91 => InstructionInfo {
            operand_code: opcode,
            instruction: STA,
            addressing_mode: IndirectY,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },

        // BIT
        0x24 => InstructionInfo {
            operand_code: opcode,
            instruction: BIT,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: false,
            instruction_type: Common,
        },
        0x2C => InstructionInfo {
            operand_code: opcode,
            instruction: BIT,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },

        // BVS
        0x70 => InstructionInfo {
            operand_code: opcode,
            instruction: BVS,
            addressing_mode: Relative,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Branch,
        },

        // BVC
        0x50 => InstructionInfo {
            operand_code: opcode,
            instruction: BVC,
            addressing_mode: Relative,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Branch,
        },

        // BPL
        0x10 => InstructionInfo {
            operand_code: opcode,
            instruction: BPL,
            addressing_mode: Relative,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Branch,
        },

        // RTS
        0x60 => InstructionInfo {
            operand_code: opcode,
            instruction: RTS,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },

        // SEI
        0x78 => InstructionInfo {
            operand_code: opcode,
            instruction: SEI,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },

        // ASL
        0x0A => InstructionInfo {
            operand_code: opcode,
            instruction: ASL,
            addressing_mode: Accumulator,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },

        0x06 => InstructionInfo {
            operand_code: opcode,
            instruction: ASL,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: false,
            instruction_type: Common,
        },

        0x16 => InstructionInfo {
            operand_code: opcode,
            instruction: ASL,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },

        0x0E => InstructionInfo {
            operand_code: opcode,
            instruction: ASL,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },

        0x1E => InstructionInfo {
            operand_code: opcode,
            instruction: ASL,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 7,
            unofficial: false,
            instruction_type: Common,
        },

        // SED
        0xF8 => InstructionInfo {
            operand_code: opcode,
            instruction: SED,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },

        // PHP
        0x08 => InstructionInfo {
            operand_code: opcode,
            instruction: PHP,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 3,
            unofficial: false,
            instruction_type: Common,
        },
        // PLA
        0x68 => InstructionInfo {
            operand_code: opcode,
            instruction: PLA,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },

        // AND
        0x29 => InstructionInfo {
            operand_code: opcode,
            instruction: AND,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },
        0x25 => InstructionInfo {
            operand_code: opcode,
            instruction: AND,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: false,
            instruction_type: Common,
        },
        0x35 => InstructionInfo {
            operand_code: opcode,
            instruction: AND,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0x2D => InstructionInfo {
            operand_code: opcode,
            instruction: AND,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0x3D => InstructionInfo {
            operand_code: opcode,
            instruction: AND,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: CrossingPage,
        },
        0x39 => InstructionInfo {
            operand_code: opcode,
            instruction: AND,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: CrossingPage,
        },
        0x21 => InstructionInfo {
            operand_code: opcode,
            instruction: AND,
            addressing_mode: IndirectX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },
        0x31 => InstructionInfo {
            operand_code: opcode,
            instruction: AND,
            addressing_mode: IndirectY,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: false,
            instruction_type: CrossingPage,
        },

        // CMP
        0xC9 => InstructionInfo {
            operand_code: opcode,
            instruction: CMP,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },
        0xC5 => InstructionInfo {
            operand_code: opcode,
            instruction: CMP,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: false,
            instruction_type: Common,
        },
        0xD5 => InstructionInfo {
            operand_code: opcode,
            instruction: CMP,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0xCD => InstructionInfo {
            operand_code: opcode,
            instruction: CMP,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0xDD => InstructionInfo {
            operand_code: opcode,
            instruction: CMP,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: CrossingPage,
        },
        0xD9 => InstructionInfo {
            operand_code: opcode,
            instruction: CMP,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: CrossingPage,
        },
        0xC1 => InstructionInfo {
            operand_code: opcode,
            instruction: CMP,
            addressing_mode: IndirectX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },
        0xD1 => InstructionInfo {
            operand_code: opcode,
            instruction: CMP,
            addressing_mode: IndirectY,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: false,
            instruction_type: CrossingPage,
        },
        // CLD
        0xD8 => InstructionInfo {
            operand_code: opcode,
            instruction: CLD,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },

        // PHA
        0x48 => InstructionInfo {
            operand_code: opcode,
            instruction: PHA,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 3,
            unofficial: false,
            instruction_type: Common,
        },

        // PLP
        0x28 => InstructionInfo {
            operand_code: opcode,
            instruction: PLP,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },

        // BMI
        0x30 => InstructionInfo {
            operand_code: opcode,
            instruction: BMI,
            addressing_mode: Relative,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Branch,
        },

        // ORA
        0x09 => InstructionInfo {
            operand_code: opcode,
            instruction: ORA,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },
        0x05 => InstructionInfo {
            operand_code: opcode,
            instruction: ORA,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: false,
            instruction_type: Common,
        },
        0x15 => InstructionInfo {
            operand_code: opcode,
            instruction: ORA,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0x0D => InstructionInfo {
            operand_code: opcode,
            instruction: ORA,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0x1D => InstructionInfo {
            operand_code: opcode,
            instruction: ORA,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: CrossingPage,
        },
        0x19 => InstructionInfo {
            operand_code: opcode,
            instruction: ORA,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: CrossingPage,
        },
        0x01 => InstructionInfo {
            operand_code: opcode,
            instruction: ORA,
            addressing_mode: IndirectX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },
        0x11 => InstructionInfo {
            operand_code: opcode,
            instruction: ORA,
            addressing_mode: IndirectY,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: false,
            instruction_type: CrossingPage,
        },

        // CLV
        0xB8 => InstructionInfo {
            operand_code: opcode,
            instruction: CLV,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },

        // EOR
        0x49 => InstructionInfo {
            operand_code: opcode,
            instruction: EOR,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },
        0x45 => InstructionInfo {
            operand_code: opcode,
            instruction: EOR,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: false,
            instruction_type: Common,
        },
        0x55 => InstructionInfo {
            operand_code: opcode,
            instruction: EOR,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0x4D => InstructionInfo {
            operand_code: opcode,
            instruction: EOR,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0x5D => InstructionInfo {
            operand_code: opcode,
            instruction: EOR,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: CrossingPage,
        },
        0x59 => InstructionInfo {
            operand_code: opcode,
            instruction: EOR,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: CrossingPage,
        },
        0x41 => InstructionInfo {
            operand_code: opcode,
            instruction: EOR,
            addressing_mode: IndirectX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },
        0x51 => InstructionInfo {
            operand_code: opcode,
            instruction: EOR,
            addressing_mode: IndirectY,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: false,
            instruction_type: CrossingPage,
        },

        // ADC
        0x69 => InstructionInfo {
            operand_code: opcode,
            instruction: ADC,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },
        0x65 => InstructionInfo {
            operand_code: opcode,
            instruction: ADC,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: false,
            instruction_type: Common,
        },
        0x75 => InstructionInfo {
            operand_code: opcode,
            instruction: ADC,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0x6D => InstructionInfo {
            operand_code: opcode,
            instruction: ADC,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0x7D => InstructionInfo {
            operand_code: opcode,
            instruction: ADC,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: CrossingPage,
        },
        0x79 => InstructionInfo {
            operand_code: opcode,
            instruction: ADC,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: CrossingPage,
        },
        0x61 => InstructionInfo {
            operand_code: opcode,
            instruction: ADC,
            addressing_mode: IndirectX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },
        0x71 => InstructionInfo {
            operand_code: opcode,
            instruction: ADC,
            addressing_mode: IndirectY,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: false,
            instruction_type: CrossingPage,
        },

        // LDY
        0xA0 => InstructionInfo {
            operand_code: opcode,
            instruction: LDY,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },
        0xA4 => InstructionInfo {
            operand_code: opcode,
            instruction: LDY,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: false,
            instruction_type: Common,
        },
        0xB4 => InstructionInfo {
            operand_code: opcode,
            instruction: LDY,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0xAC => InstructionInfo {
            operand_code: opcode,
            instruction: LDY,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0xBC => InstructionInfo {
            operand_code: opcode,
            instruction: LDY,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: CrossingPage,
        },

        // CPY
        0xC0 => InstructionInfo {
            operand_code: opcode,
            instruction: CPY,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },
        0xC4 => InstructionInfo {
            operand_code: opcode,
            instruction: CPY,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: false,
            instruction_type: Common,
        },
        0xCC => InstructionInfo {
            operand_code: opcode,
            instruction: CPY,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },

        // CPX
        0xE0 => InstructionInfo {
            operand_code: opcode,
            instruction: CPX,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },
        0xE4 => InstructionInfo {
            operand_code: opcode,
            instruction: CPX,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: false,
            instruction_type: Common,
        },
        0xEC => InstructionInfo {
            operand_code: opcode,
            instruction: CPX,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },

        // SBC
        0xE9 => InstructionInfo {
            operand_code: opcode,
            instruction: SBC,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },
        0xEB => InstructionInfo {
            operand_code: opcode,
            instruction: SBC,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },
        0xE5 => InstructionInfo {
            operand_code: opcode,
            instruction: SBC,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: false,
            instruction_type: Common,
        },
        0xF5 => InstructionInfo {
            operand_code: opcode,
            instruction: SBC,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0xED => InstructionInfo {
            operand_code: opcode,
            instruction: SBC,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0xFD => InstructionInfo {
            operand_code: opcode,
            instruction: SBC,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: CrossingPage,
        },
        0xF9 => InstructionInfo {
            operand_code: opcode,
            instruction: SBC,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: CrossingPage,
        },
        0xE1 => InstructionInfo {
            operand_code: opcode,
            instruction: SBC,
            addressing_mode: IndirectX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },
        0xF1 => InstructionInfo {
            operand_code: opcode,
            instruction: SBC,
            addressing_mode: IndirectY,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: false,
            instruction_type: CrossingPage,
        },

        // INY
        0xC8 => InstructionInfo {
            operand_code: opcode,
            instruction: INY,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },

        // INX
        0xE8 => InstructionInfo {
            operand_code: opcode,
            instruction: INX,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },
        // DEY
        0x88 => InstructionInfo {
            operand_code: opcode,
            instruction: DEY,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },

        // DEX
        0xCA => InstructionInfo {
            operand_code: opcode,
            instruction: DEX,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },

        // TAX
        0xAA => InstructionInfo {
            operand_code: opcode,
            instruction: TAX,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },

        // TAY
        0xA8 => InstructionInfo {
            operand_code: opcode,
            instruction: TAY,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },

        // TXA
        0x8A => InstructionInfo {
            operand_code: opcode,
            instruction: TXA,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },

        // TYA
        0x98 => InstructionInfo {
            operand_code: opcode,
            instruction: TYA,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },

        // TSX
        0xBA => InstructionInfo {
            operand_code: opcode,
            instruction: TSX,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },

        // TXS
        0x9A => InstructionInfo {
            operand_code: opcode,
            instruction: TXS,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },

        // RTI
        0x40 => InstructionInfo {
            operand_code: opcode,
            instruction: RTI,
            addressing_mode: Implied,
            operand_size: 1,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },

        // LSR
        0x4A => InstructionInfo {
            operand_code: opcode,
            instruction: LSR,
            addressing_mode: Accumulator,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },
        0x46 => InstructionInfo {
            operand_code: opcode,
            instruction: LSR,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: false,
            instruction_type: Common,
        },
        0x56 => InstructionInfo {
            operand_code: opcode,
            instruction: LSR,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },
        0x4E => InstructionInfo {
            operand_code: opcode,
            instruction: LSR,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },
        0x5E => InstructionInfo {
            operand_code: opcode,
            instruction: LSR,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 7,
            unofficial: false,
            instruction_type: Common,
        },

        // ROR
        0x6A => InstructionInfo {
            operand_code: opcode,
            instruction: ROR,
            addressing_mode: Accumulator,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },
        0x66 => InstructionInfo {
            operand_code: opcode,
            instruction: ROR,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: false,
            instruction_type: Common,
        },
        0x76 => InstructionInfo {
            operand_code: opcode,
            instruction: ROR,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },
        0x6E => InstructionInfo {
            operand_code: opcode,
            instruction: ROR,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },
        0x7E => InstructionInfo {
            operand_code: opcode,
            instruction: ROR,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 7,
            unofficial: false,
            instruction_type: Common,
        },

        // ROL
        0x2A => InstructionInfo {
            operand_code: opcode,
            instruction: ROL,
            addressing_mode: Accumulator,
            operand_size: 1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },
        0x26 => InstructionInfo {
            operand_code: opcode,
            instruction: ROL,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: false,
            instruction_type: Common,
        },
        0x36 => InstructionInfo {
            operand_code: opcode,
            instruction: ROL,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },
        0x2E => InstructionInfo {
            operand_code: opcode,
            instruction: ROL,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },
        0x3E => InstructionInfo {
            operand_code: opcode,
            instruction: ROL,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 7,
            unofficial: false,
            instruction_type: Common,
        },

        // STY
        0x84 => InstructionInfo {
            operand_code: opcode,
            instruction: STY,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: false,
            instruction_type: Common,
        },
        0x8C => InstructionInfo {
            operand_code: opcode,
            instruction: STY,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },
        0x94 => InstructionInfo {
            operand_code: opcode,
            instruction: STY,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: false,
            instruction_type: Common,
        },

        // DEC
        0xC6 => InstructionInfo {
            operand_code: opcode,
            instruction: DEC,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: false,
            instruction_type: Common,
        },

        0xD6 => InstructionInfo {
            operand_code: opcode,
            instruction: DEC,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },
        0xCE => InstructionInfo {
            operand_code: opcode,
            instruction: DEC,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },
        0xDE => InstructionInfo {
            operand_code: opcode,
            instruction: DEC,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 7,
            unofficial: false,
            instruction_type: Common,
        },

        // INC
        0xE6 => InstructionInfo {
            operand_code: opcode,
            instruction: INC,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: false,
            instruction_type: Common,
        },

        0xF6 => InstructionInfo {
            operand_code: opcode,
            instruction: INC,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },
        0xEE => InstructionInfo {
            operand_code: opcode,
            instruction: INC,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 6,
            unofficial: false,
            instruction_type: Common,
        },
        0xFE => InstructionInfo {
            operand_code: opcode,
            instruction: INC,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 7,
            unofficial: false,
            instruction_type: Common,
        },

        // DOP
        0x04 => InstructionInfo {
            operand_code: opcode,
            instruction: DOP,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: true,
            instruction_type: Common,
        },
        0x14 => InstructionInfo {
            operand_code: opcode,
            instruction: DOP,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: Common,
        },
        0x34 => InstructionInfo {
            operand_code: opcode,
            instruction: DOP,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: Common,
        },
        0x44 => InstructionInfo {
            operand_code: opcode,
            instruction: DOP,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: true,
            instruction_type: Common,
        },

        0x54 => InstructionInfo {
            operand_code: opcode,
            instruction: DOP,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: Common,
        },
        0x64 => InstructionInfo {
            operand_code: opcode,
            instruction: DOP,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: true,
            instruction_type: Common,
        },

        0x74 => InstructionInfo {
            operand_code: opcode,
            instruction: DOP,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: Common,
        },

        0x80 => InstructionInfo {
            operand_code: opcode,
            instruction: DOP,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },
        0x82 => InstructionInfo {
            operand_code: opcode,
            instruction: DOP,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },

        0x89 => InstructionInfo {
            operand_code: opcode,
            instruction: DOP,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },

        0xC2 => InstructionInfo {
            operand_code: opcode,
            instruction: DOP,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },
        0xD4 => InstructionInfo {
            operand_code: opcode,
            instruction: DOP,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: Common,
        },

        0xE2 => InstructionInfo {
            operand_code: opcode,
            instruction: DOP,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },

        0xF4 => InstructionInfo {
            operand_code: opcode,
            instruction: DOP,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: Common,
        },

        // Top
        0x0C => InstructionInfo {
            operand_code: opcode,
            instruction: TOP,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: Common,
        },
        0x1C => InstructionInfo {
            operand_code: opcode,
            instruction: TOP,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: CrossingPage,
        },
        0x3C => InstructionInfo {
            operand_code: opcode,
            instruction: TOP,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: CrossingPage,
        },
        0x5C => InstructionInfo {
            operand_code: opcode,
            instruction: TOP,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: CrossingPage,
        },
        0x7C => InstructionInfo {
            operand_code: opcode,
            instruction: TOP,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: CrossingPage,
        },
        0xDC => InstructionInfo {
            operand_code: opcode,
            instruction: TOP,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: CrossingPage,
        },
        0xFC => InstructionInfo {
            operand_code: opcode,
            instruction: TOP,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: CrossingPage,
        },

        // LAX
        0xA7 => InstructionInfo {
            operand_code: opcode,
            instruction: LAX,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: true,
            instruction_type: Common,
        },
        0xB7 => InstructionInfo {
            operand_code: opcode,
            instruction: LAX,
            addressing_mode: ZeroPageY,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: Common,
        },
        0xAF => InstructionInfo {
            operand_code: opcode,
            instruction: LAX,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: Common,
        },
        0xBF => InstructionInfo {
            operand_code: opcode,
            instruction: LAX,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: CrossingPage,
        },
        0xA3 => InstructionInfo {
            operand_code: opcode,
            instruction: LAX,
            addressing_mode: IndirectX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: true,
            instruction_type: Common,
        },
        0xB3 => InstructionInfo {
            operand_code: opcode,
            instruction: LAX,
            addressing_mode: IndirectY,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: true,
            instruction_type: CrossingPage,
        },
        0xAB => InstructionInfo {
            operand_code: opcode,
            instruction: LAX,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },

        // SAX
        0x87 => InstructionInfo {
            operand_code: opcode,
            instruction: SAX,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 3,
            unofficial: true,
            instruction_type: Common,
        },
        0x97 => InstructionInfo {
            operand_code: opcode,
            instruction: SAX,
            addressing_mode: ZeroPageY,
            operand_size:2,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: Common,
        },
        0x83 => InstructionInfo {
            operand_code: opcode,
            instruction: SAX,
            addressing_mode: IndirectX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: true,
            instruction_type: Common,
        },
        0x8F => InstructionInfo {
            operand_code: opcode,
            instruction: SAX,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: Common,
        },

        // DCP
        0xC7 => InstructionInfo {
            operand_code: opcode,
            instruction: DCP,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: true,
            instruction_type: Common,
        },
        0xD7 => InstructionInfo {
            operand_code: opcode,
            instruction: DCP,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: true,
            instruction_type: Common,
        },
        0xCF => InstructionInfo {
            operand_code: opcode,
            instruction: DCP,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 6,
            unofficial: true,
            instruction_type: Common,
        },
        0xDF => InstructionInfo {
            operand_code: opcode,
            instruction: DCP,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 7,
            unofficial: true,
            instruction_type: Common,
        },
        0xDB => InstructionInfo {
            operand_code: opcode,
            instruction: DCP,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 7,
            unofficial: true,
            instruction_type: Common,
        },
        0xC3 => InstructionInfo {
            operand_code: opcode,
            instruction: DCP,
            addressing_mode: IndirectX,
            operand_size:2,
            instruction_cycle: 8,
            unofficial: true,
            instruction_type: Common,
        },
        0xD3 => InstructionInfo {
            operand_code: opcode,
            instruction: DCP,
            addressing_mode: IndirectY,
            operand_size:2,
            instruction_cycle: 8,
            unofficial: true,
            instruction_type: Common,
        },

        // ISC
        0xE7 => InstructionInfo {
            operand_code: opcode,
            instruction: ISC,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: true,
            instruction_type: Common,
        },
        0xF7 => InstructionInfo {
            operand_code: opcode,
            instruction: ISC,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: true,
            instruction_type: Common,
        },
        0xEF => InstructionInfo {
            operand_code: opcode,
            instruction: ISC,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 6,
            unofficial: true,
            instruction_type: Common,
        },
        0xFF => InstructionInfo {
            operand_code: opcode,
            instruction: ISC,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 7,
            unofficial: true,
            instruction_type: Common,
        },
        0xFB => InstructionInfo {
            operand_code: opcode,
            instruction: ISC,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 7,
            unofficial: true,
            instruction_type: Common,
        },
        0xE3 => InstructionInfo {
            operand_code: opcode,
            instruction: ISC,
            addressing_mode: IndirectX,
            operand_size:2,
            instruction_cycle: 8,
            unofficial: true,
            instruction_type: Common,
        },
        0xF3 => InstructionInfo {
            operand_code: opcode,
            instruction: ISC,
            addressing_mode: IndirectY,
            operand_size:2,
            instruction_cycle: 8,
            unofficial: true,
            instruction_type: Common,
        },

        // SLO
        0x07 => InstructionInfo {
            operand_code: opcode,
            instruction: SLO,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: true,
            instruction_type: Common,
        },
        0x17 => InstructionInfo {
            operand_code: opcode,
            instruction: SLO,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: true,
            instruction_type: Common,
        },
        0x0F => InstructionInfo {
            operand_code: opcode,
            instruction: SLO,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 6,
            unofficial: true,
            instruction_type: Common,
        },
        0x1F => InstructionInfo {
            operand_code: opcode,
            instruction: SLO,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 7,
            unofficial: true,
            instruction_type: Common,
        },
        0x1B => InstructionInfo {
            operand_code: opcode,
            instruction: SLO,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 7,
            unofficial: true,
            instruction_type: Common,
        },
        0x03 => InstructionInfo {
            operand_code: opcode,
            instruction: SLO,
            addressing_mode: IndirectX,
            operand_size:2,
            instruction_cycle: 8,
            unofficial: true,
            instruction_type: Common,
        },
        0x13 => InstructionInfo {
            operand_code: opcode,
            instruction: SLO,
            addressing_mode: IndirectY,
            operand_size:2,
            instruction_cycle: 8,
            unofficial: true,
            instruction_type: Common,
        },

        // RLA
        0x27 => InstructionInfo {
            operand_code: opcode,
            instruction: RLA,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: true,
            instruction_type: Common,
        },
        0x37 => InstructionInfo {
            operand_code: opcode,
            instruction: RLA,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: true,
            instruction_type: Common,
        },
        0x2F => InstructionInfo {
            operand_code: opcode,
            instruction: RLA,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 6,
            unofficial: true,
            instruction_type: Common,
        },
        0x3F => InstructionInfo {
            operand_code: opcode,
            instruction: RLA,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 7,
            unofficial: true,
            instruction_type: Common,
        },
        0x3B => InstructionInfo {
            operand_code: opcode,
            instruction: RLA,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 7,
            unofficial: true,
            instruction_type: Common,
        },
        0x23 => InstructionInfo {
            operand_code: opcode,
            instruction: RLA,
            addressing_mode: IndirectX,
            operand_size:2,
            instruction_cycle: 8,
            unofficial: true,
            instruction_type: Common,
        },
        0x33 => InstructionInfo {
            operand_code: opcode,
            instruction: RLA,
            addressing_mode: IndirectY,
            operand_size:2,
            instruction_cycle: 8,
            unofficial: true,
            instruction_type: Common,
        },

        // SRE
        0x47 => InstructionInfo {
            operand_code: opcode,
            instruction: SRE,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: true,
            instruction_type: Common,
        },
        0x57 => InstructionInfo {
            operand_code: opcode,
            instruction: SRE,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: true,
            instruction_type: Common,
        },
        0x4F => InstructionInfo {
            operand_code: opcode,
            instruction: SRE,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 6,
            unofficial: true,
            instruction_type: Common,
        },
        0x5F => InstructionInfo {
            operand_code: opcode,
            instruction: SRE,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 7,
            unofficial: true,
            instruction_type: Common,
        },
        0x5B => InstructionInfo {
            operand_code: opcode,
            instruction: SRE,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 7,
            unofficial: true,
            instruction_type: Common,
        },
        0x43 => InstructionInfo {
            operand_code: opcode,
            instruction: SRE,
            addressing_mode: IndirectX,
            operand_size:2,
            instruction_cycle: 8,
            unofficial: true,
            instruction_type: Common,
        },
        0x53 => InstructionInfo {
            operand_code: opcode,
            instruction: SRE,
            addressing_mode: IndirectY,
            operand_size:2,
            instruction_cycle: 8,
            unofficial: true,
            instruction_type: Common,
        },

        // RRA
        0x67 => InstructionInfo {
            operand_code: opcode,
            instruction: RRA,
            addressing_mode: ZeroPage,
            operand_size:2,
            instruction_cycle: 5,
            unofficial: true,
            instruction_type: Common,
        },
        0x77 => InstructionInfo {
            operand_code: opcode,
            instruction: RRA,
            addressing_mode: ZeroPageX,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: true,
            instruction_type: Common,
        },
        0x6F => InstructionInfo {
            operand_code: opcode,
            instruction: RRA,
            addressing_mode: Absolute,
            operand_size:3,
            instruction_cycle: 6,
            unofficial: true,
            instruction_type: Common,
        },
        0x7F => InstructionInfo {
            operand_code: opcode,
            instruction: RRA,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 7,
            unofficial: true,
            instruction_type: Common,
        },
        0x7B => InstructionInfo {
            operand_code: opcode,
            instruction: RRA,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 7,
            unofficial: true,
            instruction_type: Common,
        },
        0x63 => InstructionInfo {
            operand_code: opcode,
            instruction: RRA,
            addressing_mode: IndirectX,
            operand_size:2,
            instruction_cycle: 8,
            unofficial: true,
            instruction_type: Common,
        },
        0x73 => InstructionInfo {
            operand_code: opcode,
            instruction: RRA,
            addressing_mode: IndirectY,
            operand_size:2,
            instruction_cycle: 8,
            unofficial: true,
            instruction_type: Common,
        },

        0x6B => InstructionInfo {
            operand_code: opcode,
            instruction: ARR,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },

        //cli
        0x58 => InstructionInfo {
            operand_code: opcode,
            instruction: CLI,
            addressing_mode: Implied,
            operand_size:1,
            instruction_cycle: 2,
            unofficial: false,
            instruction_type: Common,
        },

        //ANC
        0x0B => InstructionInfo {
            operand_code: opcode,
            instruction: ANC,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },
        0x2B => InstructionInfo {
            operand_code: opcode,
            instruction: ANC,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },

        // ALR
        0x4B => InstructionInfo {
            operand_code: opcode,
            instruction: ALR,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },

        //xaa
        0x8B => InstructionInfo {
            operand_code: opcode,
            instruction: XAA,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },  

        //AHX
        0x93 => InstructionInfo {
            operand_code: opcode,
            instruction: AHX,
            addressing_mode: IndirectY,
            operand_size:2,
            instruction_cycle: 6,
            unofficial: true,
            instruction_type: Common,
        },
        0x9F => InstructionInfo {
            operand_code: opcode,
            instruction: AHX,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 5,
            unofficial: true,
            instruction_type: Common,
        },

        //TAS
        0x9B => InstructionInfo {
            operand_code: opcode,
            instruction: TAS,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 5,
            unofficial: true,
            instruction_type: Common,
        },

        //SHY
        0x9C => InstructionInfo {
            operand_code: opcode,
            instruction: SHY,
            addressing_mode: AbsoluteX,
            operand_size:3,
            instruction_cycle: 5,
            unofficial: true,
            instruction_type: Common,
        },

        //SHX
        0x9E => InstructionInfo {
            operand_code: opcode,
            instruction: SHX,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 5,
            unofficial: true,
            instruction_type: Common,
        },

        //LAS
        0xBB => InstructionInfo {
            operand_code: opcode,
            instruction: LAS,
            addressing_mode: AbsoluteY,
            operand_size:3,
            instruction_cycle: 4,
            unofficial: true,
            instruction_type: Common,
        },

        // AXS
        0xCB => InstructionInfo {
            operand_code: opcode,
            instruction: AXS,
            addressing_mode: Immediate,
            operand_size:2,
            instruction_cycle: 2,
            unofficial: true,
            instruction_type: Common,
        },


        // ...其他操作码到指令的映射
        _ => panic!("当前操作码{:02X}不存在", opcode),
    }
}
